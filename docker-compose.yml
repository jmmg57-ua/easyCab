# x-common-extra-hosts: &x-common-extra-hosts
#   extra_hosts:
#     # - "registry:127.0.0.1"
#     # - "central:127.0.0.1"
#     # - "kafka:127.0.0.1"
#     # - "ctc:127.0.0.1" (PARA CENTRAL)


services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"       # Puerto para acceso interno dentro de la red Docker
      - "9093:9093"
      - "29092:29092"     # Puerto para acceso externo desde la máquina host
    environment:
      KAFKA_LISTENERS: SSL://0.0.0.0:9093,PLAINTEXT_INTERNAL://0.0.0.0:9092,PLAINTEXT_EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: SSL://kafka:9093,PLAINTEXT_INTERNAL://kafka:9092,PLAINTEXT_EXTERNAL://192.168.1.131:29092 #Cambiar external por IP que hostee kafka
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: SSL:SSL,PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: SSL
      # Configuración SSL para cifrado
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: password
      KAFKA_SSL_KEY_PASSWORD: password
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.truststore.jks      
      KAFKA_SSL_TRUSTSTORE_PASSWORD: password
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""
      KAFKA_SSL_ENABLED_PROTOCOLS: TLSv1.2,TLSv1.3
      
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "taxi_updates:1:1,taxi_requests:1:1,taxi_responses:1:1,updated_map:1:1,taxi_instructions:1:1,map_updates:1:1"
    
    volumes:
      - ./kafka_certs:/etc/kafka/secrets
    
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:9093"]
      interval: 30s
      timeout: 10s
      retries: 5

  central:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_central
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true  
    entrypoint: /bin/bash
    ports:
      - "8000:8000"
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092   # Cambiar por ip y port host kafka
    volumes:
      - ./data:/data  
    healthcheck:
      test: ["CMD-SHELL", "python -c 'from kafka import KafkaProducer; KafkaProducer(bootstrap_servers=[\"kafka:9092\"])'"]
      interval: 30s
      timeout: 10s
      retries: 5


  registry:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_registry
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true  
    ports:
      - "10000:10000"
    volumes:
      - ./data:/app/data
      - ./src/registry:/app
    environment:
      - REGISTRY_PORT=10000
    command: >
      node ec_registry.js

  api_central:
    build:
      context: .
      dockerfile: docker/Dockerfile.api_central
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true  
    ports:
      - "11000:11000"
    volumes:
      - ./data:/app/data
      - ./src/API_central:/app
    environment:
      - API_CENTRAL_PORT=11000
    command: >
      node api_central.js


  dengine1:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_de
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true
    ports:
      - "9001:9001"
    # <<: *x-common-extra-hosts


  dengine2:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_de
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true
    ports:
      - "9002:9002"
    # <<: *x-common-extra-hosts    


  dengine3:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_de
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true
    ports:
      - "9003:9003"
    # <<: *x-common-extra-hosts


  dengine4:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_de
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true
    ports:
      - "9004:9004"
    # <<: *x-common-extra-hosts  

  dengine5:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_de
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true
    ports:
      - "9005:9005"
    # <<: *x-common-extra-hosts



  sensor1:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_s
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true


  sensor2:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_s
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true



  sensor3:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_s
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true


  sensor4:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_s
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true


  sensor5:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_s
    stdin_open: true       # Para habilitar la entrada estándar interactiva
    tty: true





  customer1:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_customer
    volumes:
      - ./data:/data 
    # <<: *x-common-extra-hosts
    command: >
      python ec_customer.py kafka:9093 a /data/services1.txt 1,4

  customer2:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_customer
    volumes:
      - ./data:/data
    # <<: *x-common-extra-hosts
    command: >
      python ec_customer.py kafka:9093 b /data/services2.txt 2,8

  customer3:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_customer
    volumes:
      - ./data:/data 
    # <<: *x-common-extra-hosts
    command: >
      python ec_customer.py kafka:9093 c /data/services3.txt 3,12

  customer4:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_customer
    volumes:
      - ./data:/data 
    # <<: *x-common-extra-hosts
    command: >
      python ec_customer.py kafka:9093 d /data/services4.txt 4,16

  customer5:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_customer
    volumes:
      - ./data:/data 
    # <<: *x-common-extra-hosts
    command: >
      python ec_customer.py kafka:9093 e /data/services5.txt 5,20

  ctc:
    build:
      context: .
      dockerfile: docker/Dockerfile.ec_ctc
    ports:
      - "5000:5000"
    stdin_open: true # Para habilitar la entrada estándar interactiva
    tty: true # Para habilitar TTY interactivo
    
